Microsoft (R) Macro Assembler Version 14.29.30151.0	    08/15/23 23:13:09
.String Primitives/Macros     (Proj06_oluyoler		     Page 1 - 1


				TITLE  String Primitives/Macros     (Proj06_oluyoler)

				; Author: Richard Oluyole
				; Last Modified: 07/18/2023
				; OSU email address: oluyoler@oregonstate.edu
				; Course number/section:   CS271 Section 400
				; Project Number:      6           Due Date: 07/18/2023
				; Description: This program will receive and validate user input as a string, convert and sum the inputs, 
				;				and return the summed value/average.



				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

				;Macros

				mDisplayString	MACRO stringAddress
					push	edx
					mov		edx,stringAddress
					call	WriteString
					call	crlf
					pop		edx
				ENDM


				mGetString		MACRO prompt,bufferAddress,bufferSize,byteNum
					push	edx
					push	ecx
					push	eax

					mDisplayString	prompt
					mov		edx, bufferAddress
					mov		ecx, bufferSize
					call	ReadString
					mov		[byteNum],eax ; sending back the number of bytes entered 

					;mov		edx, offset bufferAddress
					;call	WriteString
					;mov		byteNum,eax
					;call	WriteDec

					pop eax
					pop ecx
					pop	edx
				ENDM

				;Constants
 = 7FFFFFFF			MAX_SDWORD =  +2147483647
 =-80000000			MIN_SDWORD =  -2147483648
 = 0000000A			ARRAYSIZE  =  10

 00000000			.data
 00000000  0000000A [		ARRAY		SDWORD	ARRAYSIZE DUP (?)
	    00000000
	   ]
 00000028  0000000C [		BUFFER		BYTE	12	DUP(0) ; including sign ? 
	    00
	   ]
 00000034 00000000		byteCount	DWORD   ?


 00000038 00000000		average		SDWORD ?
 0000003C 00000000		sum			SDWORD ?


 00000040 54 68 65 20 66	intro1		BYTE "The following program takes in 10 user inputs as strings verifies they are valid and returns the rounded average and sum that is represented.",0
	   6F 6C 6C 6F 77
	   69 6E 67 20 70
	   72 6F 67 72 61
	   6D 20 74 61 6B
	   65 73 20 69 6E
	   20 31 30 20 75
	   73 65 72 20 69
	   6E 70 75 74 73
	   20 61 73 20 73
	   74 72 69 6E 67
	   73 20 76 65 72
	   69 66 69 65 73
	   20 74 68 65 79
	   20 61 72 65 20
	   76 61 6C 69 64
	   20 61 6E 64 20
	   72 65 74 75 72
	   6E 73 20 74 68
	   65 20 72 6F 75
	   6E 64 65 64 20
	   61 76 65 72 61
	   67 65 20 61 6E
	   64 20 73 75 6D
	   20 74 68 61 74
	   20 69 73 20 72
	   65 70 72 65 73
	   65 6E 74 65 64
	   2E 00
 000000CE 54 68 65 20 69	intro2		BYTE "The inputs must represent numbers [-2^31,2^31-1] to be valid ",0
	   6E 70 75 74 73
	   20 6D 75 73 74
	   20 72 65 70 72
	   65 73 65 6E 74
	   20 6E 75 6D 62
	   65 72 73 20 5B
	   2D 32 5E 33 31
	   2C 32 5E 33 31
	   2D 31 5D 20 74
	   6F 20 62 65 20
	   76 61 6C 69 64
	   20 00
 0000010C 41 66 74 65 72	intro3		BYTE "After collecting 10 numbers the running sum and rounded average will be displayed.",0
	   20 63 6F 6C 6C
	   65 63 74 69 6E
	   67 20 31 30 20
	   6E 75 6D 62 65
	   72 73 20 74 68
	   65 20 72 75 6E
	   6E 69 6E 67 20
	   73 75 6D 20 61
	   6E 64 20 72 6F
	   75 6E 64 65 64
	   20 61 76 65 72
	   61 67 65 20 77
	   69 6C 6C 20 62
	   65 20 64 69 73
	   70 6C 61 79 65
	   64 2E 00

 0000015F 45 6E 74 65 72	promptUser	BYTE "Enter in a signed number: ",0
	   20 69 6E 20 61
	   20 73 69 67 6E
	   65 64 20 6E 75
	   6D 62 65 72 3A
	   20 00
 0000017A 57 68 61 74 20	rePrompt	BYTE "What you entered is either too large,too small, or not a number.Try again: ",0
	   79 6F 75 20 65
	   6E 74 65 72 65
	   64 20 69 73 20
	   65 69 74 68 65
	   72 20 74 6F 6F
	   20 6C 61 72 67
	   65 2C 74 6F 6F
	   20 73 6D 61 6C
	   6C 2C 20 6F 72
	   20 6E 6F 74 20
	   61 20 6E 75 6D
	   62 65 72 2E 54
	   72 79 20 61 67
	   61 69 6E 3A 20
	   00

 000001C6 48 65 72 65 20	YouEntered	BYTE "Here are your 10 inputs",0
	   61 72 65 20 79
	   6F 75 72 20 31
	   30 20 69 6E 70
	   75 74 73 00
 000001DE 54 68 65 20 74	showAverage	BYTE "The truncated average is:",0
	   72 75 6E 63 61
	   74 65 64 20 61
	   76 65 72 61 67
	   65 20 69 73 3A
	   00
 000001F8 54 68 65 20 63	showSum		BYTE "The calculated sum is:",0
	   61 6C 63 75 6C
	   61 74 65 64 20
	   73 75 6D 20 69
	   73 3A 00
 0000020F 54 68 61 6E 6B	goodbye		BYTE "Thanks for using the program,bye now.",0
	   73 20 66 6F 72
	   20 75 73 69 6E
	   67 20 74 68 65
	   20 70 72 6F 67
	   72 61 6D 2C 62
	   79 65 20 6E 6F
	   77 2E 00

 00000235 69 6E 76 61 6C	invalid		byte "invalid",0 ; for debugging and will later be removed
	   69 64 00
 0000023D 76 61 6C 69 64	valid		byte "valid",0	;
	   00
 00000243 2B 39 30 30 30	testNum		byte "+9000",0
	   00


 00000000			.code
 00000000			main PROC

					mDisplayString offset intro1
 00000000  52		     1		push	edx
 00000001  BA 00000040 R     1		mov		edx,offset intro1
 00000006  E8 00000000 E     1		call	WriteString
 0000000B  E8 00000000 E     1		call	crlf
 00000010  5A		     1		pop		edx
					mDisplayString offset intro2
 00000011  52		     1		push	edx
 00000012  BA 000000CE R     1		mov		edx,offset intro2
 00000017  E8 00000000 E     1		call	WriteString
 0000001C  E8 00000000 E     1		call	crlf
 00000021  5A		     1		pop		edx
					mDisplayString offset intro3
 00000022  52		     1		push	edx
 00000023  BA 0000010C R     1		mov		edx,offset intro3
 00000028  E8 00000000 E     1		call	WriteString
 0000002D  E8 00000000 E     1		call	crlf
 00000032  5A		     1		pop		edx
					

 00000033  68 0000017A R		push	offset	rePrompt
 00000038  68 0000015F R		push	offset	promptUser
 0000003D  68 00000028 R		push	offset	BUFFER
 00000042  6A 0C			push	sizeof	BUFFER
 00000044  68 00000034 R		push	offset	byteCount
 00000049  E8 00000034			call	ReadVal


					;	push	offset	testNum
					;	push	sizeof	testNum
					;	call	StringtoInt

				;	mov		esi,offset testNum
				;	inc		esi
				;	mov		al,[esi]
				;	call	WriteChar

						Invoke ExitProcess,0	; exit to operating system
 0000004E  6A 00	   *	    push   +000000000h
 00000050  E8 00000000 E   *	    call   ExitProcess
 00000055			main ENDP

				; (insert additional procedures here)


 00000055			StringtoInt	PROC
 00000055  55				push	ebp
 00000056  8B EC			mov		ebp,esp

 00000058  8B 75 0C			mov		esi,[ebp+12]
 0000005B  8B 4D 08			mov		ecx,[ebp+8]
 0000005E  49				dec		ecx
 0000005F  B8 00000000			mov		eax,0
 00000064  FC				CLD
 00000065				conv:
 00000065  BB 0000000A				mov		ebx,10
 0000006A  F7 EB				imul	ebx
 0000006C  50					push	eax ; save old remainder times 10
					

 0000006D  33 C0				xor		eax,eax
 0000006F  AC					lodsb
					
 00000070  83 E8 30				sub		eax,48
 00000073  8B D8				mov		ebx,eax

 00000075  58					pop		eax
 00000076  03 C3				add		eax,ebx
						
						;call	WriteInt

 00000078  E2 EB				LOOP conv
 0000007A					_break:
 0000007A  E8 00000000 E			call	WriteInt

 0000007F  C2 0008		RET		8
 00000082			StringtoInt	ENDP


 00000082			ReadVal	 PROC
 00000082  55				push	ebp
 00000083  8B EC			mov		ebp,esp
 00000085  51				push	ecx

					;			+20	       +16			+12			 +8
					;			promptUser,offset BUFFER ,sizeof BUFFER,offset byteCount
 00000086				_firstPrompt:
						mGetString [ebp+20],[ebp+16],[ebp+12],[ebp+8]
 00000086  52		     1		push	edx
 00000087  51		     1		push	ecx
 00000088  50		     1		push	eax
 00000089  52		     2		push	edx
 0000008A  8B 55 14	     2		mov		edx,[ebp+20]
 0000008D  E8 00000000 E     2		call	WriteString
 00000092  E8 00000000 E     2		call	crlf
 00000097  5A		     2		pop		edx
 00000098  8B 55 10	     1		mov		edx, [ebp+16]
 0000009B  8B 4D 0C	     1		mov		ecx, [ebp+12]
 0000009E  E8 00000000 E     1		call	ReadString
 000000A3  89 45 08	     1		mov		[[ebp+8]],eax ; sending back the number of bytes entered 
 000000A6  58		     1		pop eax
 000000A7  59		     1		pop ecx
 000000A8  5A		     1		pop	edx
 000000A9  EB 23				JMP		_verify
					
 000000AB				_subsequentPrompt: ; ebp+24 is the rePrompt
						mGetString [ebp+24],[ebp+16],[ebp+12],[ebp+8]	
 000000AB  52		     1		push	edx
 000000AC  51		     1		push	ecx
 000000AD  50		     1		push	eax
 000000AE  52		     2		push	edx
 000000AF  8B 55 18	     2		mov		edx,[ebp+24]
 000000B2  E8 00000000 E     2		call	WriteString
 000000B7  E8 00000000 E     2		call	crlf
 000000BC  5A		     2		pop		edx
 000000BD  8B 55 10	     1		mov		edx, [ebp+16]
 000000C0  8B 4D 0C	     1		mov		ecx, [ebp+12]
 000000C3  E8 00000000 E     1		call	ReadString
 000000C8  89 45 08	     1		mov		[[ebp+8]],eax ; sending back the number of bytes entered 
 000000CB  58		     1		pop eax
 000000CC  59		     1		pop ecx
 000000CD  5A		     1		pop	edx

 000000CE				_verify:

 000000CE  8B 75 10			mov		esi,[ebp+16] ;start of number string
 000000D1  8B 4D 08			mov		ecx,[ebp+8] ;number of bytes

 000000D4  B8 00000000			mov		eax,0
 000000D9  BB 00000000			mov		ebx,0

 000000DE				verifyChars:	
 000000DE  AC					lodsb	

 000000DF  3C 2B				cmp		al,43
 000000E1  74 0E				JE		_checkPlus

 000000E3  3C 2D				cmp		al,45
 000000E5  74 16				JE		_checkNegative
						
 000000E7  3C 39				cmp		al,57
 000000E9  7F 22				JG		_invalidChar

 000000EB  3C 30				cmp		al,48
 000000ED  7C 1E				JL		_invalidChar
						
 000000EF  EB 18				JMP		_continue
 000000F1					_checkPlus:
 000000F1  3B 4D 08					cmp		ecx,[ebp+8]; check if this is the first iteration
 000000F4  75 17					JNE		_invalidChar
 000000F6  BB 00000001					mov		ebx,1
 000000FB  EB 0C					JMP		_continue
 000000FD					_checkNegative:
 000000FD  3B 4D 08					cmp		ecx,[ebp+8]
 00000100  75 0B					JNE		_invalidChar
 00000102  BB 00000002					mov		ebx,2 ; just used to represent negatives for lack of a better plan
 00000107  EB 00					JMP		_continue
 00000109					_continue:
 00000109  E2 D3				LOOP	 verifyChars
 0000010B  EB 02				JMP		_allValidChars ;entire string is valid

 0000010D				_invalidChar:
						;mov		edx,offset invalid
						;call	WriteString
						;call	crlf
 0000010D  EB 9C				JMP		_subsequentPrompt

 0000010F				_allValidChars:
						;mov		edx,offset valid 
						;call	WriteString
						;call	crlf

					
					
 0000010F  8B 75 10				mov		esi,[ebp+16] ;start of number string
 00000112  8B 4D 08				mov		ecx,[ebp+8] ;number of bytes
 00000115  B8 00000000				mov		eax,0
 0000011A  83 FB 02				cmp		ebx,2 
 0000011D  74 07				JE		_skipFirstChar
 0000011F  83 FB 01				cmp		ebx,1
 00000122  74 02				JE		_skipFirstChar
 00000124  EB 03				JMP		conv
							
					

				; need to add condition to jump to skipChar
				;
 00000126					_skipFirstChar:
 00000126  46					inc		esi
 00000127  49					dec		ecx
						
 00000128  FC					CLD
 00000129					conv:
 00000129  BB 0000000A					mov		ebx,10
 0000012E  F7 EB					imul	ebx
 00000130  50						push	eax ; save old remainder times 10
 00000131  33 C0					xor		eax,eax
 00000133  AC						lodsb

 00000134  83 E8 30					sub		eax,48; ASCII subtraction 
 00000137  8B D8					mov		ebx,eax

 00000139  58						pop		eax
 0000013A  03 C3					add		eax,ebx

 0000013C  E2 EB					LOOP conv

 0000013E				_finished:
 0000013E  E8 00000000 E		call	WriteDec
 00000143  59				pop		ecx
 00000144  5D				pop		ebp
 00000145  C2 0014			RET		20
 00000148			ReadVal	 ENDP



 00000148			WriteVal PROC	

 00000148  C3			RET
 00000149			WriteVal ENDP

				END main
Microsoft (R) Macro Assembler Version 14.29.30151.0	    08/15/23 23:13:09
.String Primitives/Macros     (Proj06_oluyoler		     Symbols 2 - 1




Macros:

                N a m e                 Type

mDisplayString . . . . . . . . .	Proc
mGetString . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000249 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000149 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadVal  . . . . . . . . . . . .	P Near	 00000082 _TEXT	Length= 000000C6 Public STDCALL
  _firstPrompt . . . . . . . . .	L Near	 00000086 _TEXT	
  _subsequentPrompt  . . . . . .	L Near	 000000AB _TEXT	
  _verify  . . . . . . . . . . .	L Near	 000000CE _TEXT	
  verifyChars  . . . . . . . . .	L Near	 000000DE _TEXT	
  _checkPlus . . . . . . . . . .	L Near	 000000F1 _TEXT	
  _checkNegative . . . . . . . .	L Near	 000000FD _TEXT	
  _continue  . . . . . . . . . .	L Near	 00000109 _TEXT	
  _invalidChar . . . . . . . . .	L Near	 0000010D _TEXT	
  _allValidChars . . . . . . . .	L Near	 0000010F _TEXT	
  _skipFirstChar . . . . . . . .	L Near	 00000126 _TEXT	
  conv . . . . . . . . . . . . .	L Near	 00000129 _TEXT	
  _finished  . . . . . . . . . .	L Near	 0000013E _TEXT	
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StringtoInt  . . . . . . . . . .	P Near	 00000055 _TEXT	Length= 0000002D Public STDCALL
  conv . . . . . . . . . . . . .	L Near	 00000065 _TEXT	
  _break . . . . . . . . . . . .	L Near	 0000007A _TEXT	
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteVal . . . . . . . . . . . .	P Near	 00000148 _TEXT	Length= 00000001 Public STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000055 Public STDCALL
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
ARRAYSIZE  . . . . . . . . . . .	Number	 0000000Ah   
ARRAY  . . . . . . . . . . . . .	DWord	 00000000 _DATA	
BUFFER . . . . . . . . . . . . .	Byte	 00000028 _DATA	
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MAX_SDWORD . . . . . . . . . . .	Number	 7FFFFFFFh   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MIN_SDWORD . . . . . . . . . . .	Number	 -80000000h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
YouEntered . . . . . . . . . . .	Byte	 000001C6 _DATA	
average  . . . . . . . . . . . .	DWord	 00000038 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
byteCount  . . . . . . . . . . .	DWord	 00000034 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
goodbye  . . . . . . . . . . . .	Byte	 0000020F _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
intro1 . . . . . . . . . . . . .	Byte	 00000040 _DATA	
intro2 . . . . . . . . . . . . .	Byte	 000000CE _DATA	
intro3 . . . . . . . . . . . . .	Byte	 0000010C _DATA	
invalid  . . . . . . . . . . . .	Byte	 00000235 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
promptUser . . . . . . . . . . .	Byte	 0000015F _DATA	
rePrompt . . . . . . . . . . . .	Byte	 0000017A _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
showAverage  . . . . . . . . . .	Byte	 000001DE _DATA	
showSum  . . . . . . . . . . . .	Byte	 000001F8 _DATA	
sum  . . . . . . . . . . . . . .	DWord	 0000003C _DATA	
testNum  . . . . . . . . . . . .	Byte	 00000243 _DATA	
valid  . . . . . . . . . . . . .	Byte	 0000023D _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
